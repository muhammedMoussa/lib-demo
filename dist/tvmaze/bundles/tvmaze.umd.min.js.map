{"version":3,"sources":["ng://tvmaze/lib/tvmaze.service.ts","ng://tvmaze/lib/tvmaze.component.ts","ng://tvmaze/lib/poster.component.ts","ng://tvmaze/lib/tvmaze.module.ts"],"names":["TvmazeService","prototype","getShow","id","url","this","apiRoot","http","get","Injectable","args","providedIn","HttpClient","TvmazeComponent","ngOnInit","Component","selector","template","PosterComponent","posterUrl$","tvmaze","showId","pipe","map","show","image","medium","ngAfterViewInit","subscribe","res","console","log","Input","TvmazeModule","NgModule","declarations","imports","CommonModule","HttpClientModule","exports"],"mappings":"0bAAA,IAAAA,GAWEA,EAAAC,UAAAC,QAAA,SAAQC,OACAC,EAASC,KAAKC,QAAO,UAAUH,EACrC,OAAOE,KAAKE,KAAKC,IAASJ,wBAV7BK,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDAHLC,EAAAA,4IAQP,SAAAZ,EAAoBO,GAAAF,KAAAE,KAAAA,EAFHF,KAAAC,QAAU,yBCP7B,IAAAO,GAeEA,EAAAZ,UAAAa,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,YACVC,SAAU,yFAcZJ,GALE,SAAAA,KCbF,IAAAK,GA4BIA,EAAAjB,UAAAa,SAAA,WACIT,KAAKc,WAAad,KAAKe,OAClBlB,QAAQG,KAAKgB,QACbC,KAAKC,EAAAA,IAAG,SAACC,GAAQ,OAAAA,EAAKC,MAAMC,WAGrCR,EAAAjB,UAAA0B,gBAAA,WACItB,KAAKc,WAAWS,UAAS,SAACC,GAAO,OAAAC,QAAQC,IAAIF,0BA7BpDd,EAAAA,UAASL,KAAA,CAAC,CACPM,SAAU,YACVC,SAAU,8HAID,oNARJjB,qCAmBJgC,EAAAA,SAcLd,GAXI,SAAAA,EAAoBE,GAAAf,KAAAe,OAAAA,EC1BxB,IAAAa,uBAOCC,EAAAA,SAAQxB,KAAA,CAAC,CACRyB,aAAc,CAACtB,EAAiBK,GAChCkB,QAAS,CACPC,EAAAA,aACAC,EAAAA,kBAEFC,QAAS,CAAC1B,EAAiBK,OAEDe,GAR5B,SAAAA","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TvmazeService {\n  private readonly apiRoot = 'https://api.tvmaze.com';\n\n  constructor(private http: HttpClient) { }\n\n  getShow(id: number): Observable<any> {\n    const url = `${this.apiRoot}/shows/${id}`\n    return this.http.get<any>(url);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'tm-tvmaze',\n  template: `\n    <p>\n      tvmaze works!\n    </p>\n  `,\n  styles: []\n})\nexport class TvmazeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit, Input, AfterViewInit } from \"@angular/core\";\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { TvmazeService } from './tvmaze.service';\n\n@Component({\n    selector: 'tm-poster',\n    template: `\n        <img *ngIf=\"posterUrl$ | async as src\" [src]=\"src\" alt=\"poster..\"/>\n        <p>I'm Working ð</p>\n    `,\n    styles: [`\n        :host {\n            display: inline-block;\n            overflow: hidden;\n            border-radius: 4px;\n            line-height: 0;\n        }\n    `]\n})\n\nexport class PosterComponent implements OnInit, AfterViewInit {\n    @Input() showId: number;\n    posterUrl$: Observable<string>;\n\n    constructor(private tvmaze: TvmazeService) {}\n\n    ngOnInit(): void {\n        this.posterUrl$ = this.tvmaze\n            .getShow(this.showId)\n            .pipe(map(show => show.image.medium))\n    }\n\n    ngAfterViewInit() {\n        this.posterUrl$.subscribe(res => console.log(res));\n    }\n}","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TvmazeComponent } from './tvmaze.component';\nimport { PosterComponent } from './poster.component';\n\n@NgModule({\n  declarations: [TvmazeComponent, PosterComponent],\n  imports: [\n    CommonModule,\n    HttpClientModule\n  ],\n  exports: [TvmazeComponent, PosterComponent]\n})\nexport class TvmazeModule { }\n"]}